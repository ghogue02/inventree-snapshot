name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      DEBUG: vite:*
      NODE_ENV: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci || npm ci --legacy-peer-deps
          npm list vite

      - name: Pre-build environment check
        run: |
          echo "=== Environment Check ==="
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Vite version: $(npm list vite)"
          echo "TypeScript version: $(npm list typescript)"
          echo "=== Directory Structure ==="
          pwd
          ls -la
          echo "=== Package.json ==="
          cat package.json
          echo "=== Vite Config ==="
          cat vite.config.ts
          echo "=== Environment Variables ==="
          env | grep -v -i "key" | grep -v -i "token" | grep -v -i "secret"
          echo "=== Test Vite Config ==="
          node -e "import('./vite.config.ts').then(m => console.log(m.default))"

      - name: Build project with debug
        run: |
          echo "Starting build with maximum verbosity..."
          npm run build || {
            echo "Build failed. Checking for error logs..."
            find . -name "*.log" -type f -exec cat {} \;
            exit 1
          }
          echo "Build complete. Checking dist directory:"
          ls -la dist/
        env:
          NODE_OPTIONS: "--trace-warnings --verbose"
          DEBUG: "*"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 