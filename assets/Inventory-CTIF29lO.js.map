{"version":3,"file":"Inventory-CTIF29lO.js","sources":["../../node_modules/lucide-react/dist/esm/icons/image.js","../../node_modules/lucide-react/dist/esm/icons/pencil.js","../../src/services/api/imageService.ts","../../src/pages/Inventory.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Image = createLucideIcon(\"Image\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n]);\n\nexport { Image as default };\n//# sourceMappingURL=image.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Pencil = createLucideIcon(\"Pencil\", [\n  [\n    \"path\",\n    {\n      d: \"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z\",\n      key: \"1a8usu\"\n    }\n  ],\n  [\"path\", { d: \"m15 5 4 4\", key: \"1mk7zo\" }]\n]);\n\nexport { Pencil as default };\n//# sourceMappingURL=pencil.js.map\n","import { toast } from \"sonner\";\nimport { supabase } from \"@/integrations/supabase/client\";\n\nconst getCategorySpecificPrompt = (productName: string, category: string): string => {\n  const basePrompt = \"A professional, clean product photo\";\n  \n  switch (category.toLowerCase()) {\n    case 'grains':\n      return `${basePrompt} of a box or package of ${productName}. Show the packaging clearly with the brand name visible. Style: Commercial product photography on white background.`;\n    case 'meat':\n      return `${basePrompt} of fresh, raw ${productName} on a clean white cutting board. Style: Food photography with soft lighting.`;\n    case 'produce':\n      return `${basePrompt} of fresh ${productName}, well-lit and arranged professionally. Style: Fresh produce photography on white background.`;\n    case 'pantry':\n      return `${basePrompt} of ${productName} in its retail packaging or container. Style: Commercial product photography on white background.`;\n    case 'beverages':\n      return `${basePrompt} of a single ${productName} container or bottle, showing the label clearly. Style: Beverage photography on white background.`;\n    default:\n      return `${basePrompt} of ${productName} for restaurant inventory. The image should be on a white background, well-lit, and show the product clearly. Category: ${category}. Style: Minimalist commercial product photography.`;\n  }\n};\n\nexport const generateProductImage = async (productName: string, category: string): Promise<string | null> => {\n  try {\n    const prompt = getCategorySpecificPrompt(productName, category);\n    \n    // Call Supabase Edge Function instead of OpenAI directly\n    const { data, error } = await supabase.functions.invoke('generate-image', {\n      body: { prompt, productName, category }\n    });\n\n    if (error) {\n      throw new Error(error.message);\n    }\n\n    if (!data?.imageUrl) {\n      throw new Error('No image URL returned');\n    }\n\n    const imageResponse = await fetch(data.imageUrl);\n    if (!imageResponse.ok) {\n      throw new Error(`Failed to fetch generated image`);\n    }\n\n    const imageBlob = await imageResponse.blob();\n    const reader = new FileReader();\n    const base64Promise = new Promise<string>((resolve) => {\n      reader.onloadend = () => resolve(reader.result as string);\n    });\n    reader.readAsDataURL(imageBlob);\n    const base64Data = await base64Promise;\n\n    return base64Data;\n\n  } catch (error) {\n    toast.error(\"Failed to generate image\");\n    return null;\n  }\n};\n\nexport const generateAllProductImages = async (products: { id: string; name: string; category: string; image: string | null; }[]): Promise<void> => {\n  try {\n    const productsNeedingImages = products.filter(product => !product.image);\n    \n    if (productsNeedingImages.length === 0) {\n      toast.success(\"All products already have images\");\n      return;\n    }\n\n    toast.loading(`Generating images for ${productsNeedingImages.length} products...`);\n    let successCount = 0;\n    let failureCount = 0;\n    \n    for (const product of productsNeedingImages) {\n      try {\n        const imageUrl = await generateProductImage(product.name, product.category);\n        if (imageUrl) {\n          const { error: updateError } = await supabase\n            .from('products')\n            .update({ image: imageUrl })\n            .eq('id', product.id);\n\n          if (updateError) {\n            failureCount++;\n          } else {\n            successCount++;\n          }\n        } else {\n          failureCount++;\n        }\n      } catch (error) {\n        failureCount++;\n      }\n    }\n\n    if (failureCount === 0) {\n      toast.success(`Successfully generated ${successCount} product images`);\n    } else {\n      toast.warning(`Generated ${successCount} images, failed to generate ${failureCount} images`);\n    }\n  } catch (error) {\n    toast.error(\"Failed to generate product images\");\n  }\n}; ","import { useState } from \"react\";\nimport Layout from \"@/components/layout/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Product } from \"@/types/inventory\";\nimport { Search, Plus, Trash2, Pencil, X, Check, Database, Image } from \"lucide-react\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { updateProduct, deleteProduct, loadMockProducts, generateAllProductImages } from \"@/services/apiService\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { toast } from \"sonner\";\nimport { supabase } from \"@/integrations/supabase/client\";\n\nconst Inventory = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGeneratingImages, setIsGeneratingImages] = useState(false);\n  const [hasData, setHasData] = useState(false);\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  \n  const { data: products = [], isLoading: isLoadingProducts } = useQuery({\n    queryKey: ['products'],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from('products')\n        .select('*')\n        .order('category', { ascending: true });\n      \n      if (error) throw error;\n      setHasData(data && data.length > 0);\n      return data || [];\n    }\n  });\n\n  // Calculate if any products need images\n  const productsNeedingImages = products.filter(product => !product.image);\n  const allProductsHaveImages = products.length > 0 && productsNeedingImages.length === 0;\n\n  const handleLoadMockData = async () => {\n    setIsLoading(true);\n    try {\n      await loadMockProducts();\n      queryClient.invalidateQueries([\"products\"]);\n    } catch (error) {\n      console.error(\"Error loading mock data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGenerateImages = async () => {\n    setIsGeneratingImages(true);\n    try {\n      await generateAllProductImages(products);\n      queryClient.invalidateQueries([\"products\"]);\n    } catch (error) {\n      console.error(\"Error generating images:\", error);\n    } finally {\n      setIsGeneratingImages(false);\n    }\n  };\n  \n  // Filter products based on search\n  const filteredProducts = products.filter(product => \n    product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    product.category.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  \n  // Group products by category\n  const groupedByCategory = filteredProducts.reduce<Record<string, Product[]>>((acc, product) => {\n    if (!acc[product.category]) {\n      acc[product.category] = [];\n    }\n    acc[product.category].push(product);\n    return acc;\n  }, {});\n\n  return (\n    <Layout \n      title=\"Inventory\" \n      description=\"Manage and track your restaurant inventory\"\n    >\n      <div className=\"p-6\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-6\">\n          <div className=\"relative w-full sm:w-96\">\n            <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n            <Input \n              placeholder=\"Search products...\" \n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n          <div className=\"flex gap-2\">\n            <Button \n              onClick={handleGenerateImages} \n              disabled={isGeneratingImages || products.length === 0 || allProductsHaveImages}\n              variant={allProductsHaveImages ? \"secondary\" : \"default\"}\n            >\n              <Image className=\"mr-2 h-4 w-4\" />\n              {allProductsHaveImages \n                ? \"All Images Generated\" \n                : productsNeedingImages.length > 0 \n                  ? `Generate ${productsNeedingImages.length} Images`\n                  : \"Generate Images\"\n              }\n            </Button>\n            <Button \n              onClick={handleLoadMockData} \n              disabled={isLoading || hasData}\n              variant={hasData ? \"secondary\" : \"default\"}\n            >\n              <Database className=\"mr-2 h-4 w-4\" />\n              {hasData ? \"Sample Data Loaded\" : \"Load Sample Data\"}\n            </Button>\n            <Button onClick={() => navigate(\"/add-product\")}>\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add Product\n            </Button>\n          </div>\n        </div>\n\n        {isLoadingProducts ? (\n          <div className=\"space-y-4\">\n            {[...Array(3)].map((_, i) => (\n              <Card key={i}>\n                <CardHeader>\n                  <Skeleton className=\"h-5 w-40\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {[...Array(3)].map((_, j) => (\n                      <Skeleton key={j} className=\"h-24 w-full\" />\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        ) : filteredProducts.length === 0 ? (\n          <Card>\n            <CardContent className=\"p-6 text-center\">\n              <p className=\"text-muted-foreground\">No products found</p>\n            </CardContent>\n          </Card>\n        ) : (\n          <div className=\"space-y-6\">\n            {Object.entries(groupedByCategory).map(([category, products]) => (\n              <Card key={category}>\n                <CardHeader className=\"py-4\">\n                  <CardTitle className=\"text-md font-medium\">{category}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {products.map(product => (\n                      <ProductCard key={product.id} product={product} />\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nconst PRODUCT_CATEGORIES = [\n  'Grains', 'Dairy', 'Vegetables', 'Fruits', 'Meat', 'Seafood', \n  'Spices', 'Beverages', 'Snacks', 'Baked Goods', 'Canned Goods', 'Other'\n];\n\nconst PRODUCT_UNITS = [\n  'oz', 'lb', 'g', 'kg', 'ml', 'l', 'each', 'box', 'bag', 'bottle', 'can', 'jar', 'package'\n];\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nconst ProductCard = ({ product: initialProduct }: ProductCardProps) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [product, setProduct] = useState(initialProduct);\n  const queryClient = useQueryClient();\n\n  // Determine if product is low on stock\n  const isLowStock = product.currentStock <= product.reorderPoint;\n\n  const handleChange = (field: keyof Product, value: any) => {\n    setProduct(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSave = async () => {\n    setIsLoading(true);\n    try {\n      await updateProduct(product);\n      queryClient.invalidateQueries([\"products\"]);\n      setIsEditing(false);\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!confirm(\"Are you sure you want to delete this product?\")) return;\n    \n    setIsLoading(true);\n    try {\n      await deleteProduct(product.id);\n      queryClient.invalidateQueries([\"products\"]);\n      toast.success(\"Product deleted successfully\");\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n      toast.error(\"Failed to delete product\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isEditing) {\n    return (\n      <div className=\"inventory-card border rounded-lg p-4 bg-white shadow-sm\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <div className={`h-10 w-10 rounded-full flex items-center justify-center ${isLowStock ? 'bg-orange-100 text-orange-500' : 'bg-blue-100 text-blue-500'}`}>\n            {product.name.charAt(0).toUpperCase()}\n          </div>\n          <div className=\"flex gap-2\">\n            <Button \n              variant=\"ghost\" \n              size=\"icon\" \n              className=\"h-7 w-7\" \n              onClick={() => setIsEditing(false)}\n              disabled={isLoading}\n            >\n              <X className=\"h-4 w-4 text-muted-foreground\" />\n            </Button>\n            <Button \n              variant=\"ghost\" \n              size=\"icon\" \n              className=\"h-7 w-7\" \n              onClick={handleSave}\n              disabled={isLoading}\n            >\n              <Check className=\"h-4 w-4 text-green-500\" />\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <div>\n            <Input\n              value={product.name}\n              onChange={(e) => handleChange('name', e.target.value)}\n              placeholder=\"Product name\"\n              className=\"mb-2\"\n            />\n            <Select \n              value={product.category} \n              onValueChange={(val) => handleChange('category', val)}\n            >\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select category\" />\n              </SelectTrigger>\n              <SelectContent>\n                {PRODUCT_CATEGORIES.map(category => (\n                  <SelectItem key={category} value={category}>{category}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-2\">\n            <div>\n              <Input\n                type=\"number\"\n                value={product.currentStock}\n                onChange={(e) => handleChange('currentStock', parseInt(e.target.value) || 0)}\n                placeholder=\"Current stock\"\n              />\n            </div>\n            <div>\n              <Select \n                value={product.unit} \n                onValueChange={(val) => handleChange('unit', val)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select unit\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {PRODUCT_UNITS.map(unit => (\n                    <SelectItem key={unit} value={unit}>{unit}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-2\">\n            <div>\n              <Input\n                type=\"number\"\n                value={product.reorderPoint}\n                onChange={(e) => handleChange('reorderPoint', parseInt(e.target.value) || 0)}\n                placeholder=\"Reorder point\"\n              />\n            </div>\n            <div>\n              <Input\n                type=\"number\"\n                step=\"0.01\"\n                value={product.cost}\n                onChange={(e) => handleChange('cost', parseFloat(e.target.value) || 0)}\n                placeholder=\"Cost per unit\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"inventory-card border rounded-lg p-4 bg-white shadow-sm relative\">\n      <div className=\"absolute top-2 right-2 flex gap-1\">\n        <Button \n          variant=\"ghost\" \n          size=\"icon\" \n          className=\"h-7 w-7\"\n          onClick={() => setIsEditing(true)}\n        >\n          <Pencil className=\"h-4 w-4 text-muted-foreground\" />\n        </Button>\n        <Button \n          variant=\"ghost\" \n          size=\"icon\" \n          className=\"h-7 w-7\"\n          onClick={handleDelete}\n        >\n          <Trash2 className=\"h-4 w-4 text-muted-foreground\" />\n        </Button>\n      </div>\n\n      <div className=\"flex items-center gap-3\">\n        {product.image ? (\n          <img \n            src={product.image} \n            alt={product.name}\n            className=\"h-10 w-10 rounded-full object-cover\"\n          />\n        ) : (\n          <div className={`h-10 w-10 rounded-full flex items-center justify-center ${isLowStock ? 'bg-orange-100 text-orange-500' : 'bg-blue-100 text-blue-500'}`}>\n            {product.name.charAt(0).toUpperCase()}\n          </div>\n        )}\n        <div>\n          <h3 className=\"font-medium text-sm\">{product.name}</h3>\n          <p className=\"text-xs text-muted-foreground\">\n            {product.category} • {product.unit}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"mt-3 grid grid-cols-2 gap-2\">\n        <div>\n          <p className=\"text-xs text-muted-foreground\">Current Stock</p>\n          <p className=\"font-medium\">\n            {product.currentStock} {product.unit}\n            {isLowStock && (\n              <Badge variant=\"outline\" className=\"ml-2 bg-orange-50 text-orange-500 border-orange-200\">\n                Low\n              </Badge>\n            )}\n          </p>\n        </div>\n        <div>\n          <p className=\"text-xs text-muted-foreground\">Value</p>\n          <p className=\"font-medium\">\n            ${(product.currentStock * product.cost).toFixed(2)}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"mt-3 text-xs\">\n        <div className=\"h-1.5 w-full bg-gray-100 rounded-full overflow-hidden\">\n          <div \n            className={`h-full ${\n              product.currentStock < product.reorderPoint ? 'bg-orange-500' :\n              product.currentStock < product.reorderPoint * 2 ? 'bg-yellow-500' : 'bg-green-500'\n            }`}\n            style={{ width: `${Math.min(100, (product.currentStock / (product.reorderPoint * 3)) * 100)}%` }}\n          />\n        </div>\n        <div className=\"flex justify-between mt-1\">\n          <span className=\"text-muted-foreground\">Reorder at: {product.reorderPoint}</span>\n          <span className=\"font-medium\">${product.cost}/{product.unit}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Inventory;\n"],"names":["Image","createLucideIcon","Pencil","getCategorySpecificPrompt","productName","category","basePrompt","generateProductImage","prompt","data","error","supabase","imageResponse","imageBlob","reader","base64Promise","resolve","toast","generateAllProductImages","products","productsNeedingImages","product","successCount","failureCount","imageUrl","updateError","Inventory","searchQuery","setSearchQuery","useState","isLoading","setIsLoading","isGeneratingImages","setIsGeneratingImages","hasData","setHasData","navigate","useNavigate","queryClient","useQueryClient","isLoadingProducts","useQuery","allProductsHaveImages","handleLoadMockData","loadMockProducts","handleGenerateImages","filteredProducts","groupedByCategory","acc","jsx","Layout","jsxs","Search","Input","e","Button","Database","Plus","_","Card","CardHeader","Skeleton","CardContent","j","CardTitle","ProductCard","PRODUCT_CATEGORIES","PRODUCT_UNITS","initialProduct","isEditing","setIsEditing","setProduct","isLowStock","handleChange","field","value","prev","handleSave","updateProduct","handleDelete","deleteProduct","Check","Select","val","SelectTrigger","SelectValue","SelectContent","SelectItem","unit","Trash2","Badge"],"mappings":"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","x_google_ignoreList":[0,1]}