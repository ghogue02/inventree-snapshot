{"version":3,"file":"tabs-BKfKmjqt.js","sources":["../../src/services/api/visionService.ts","../../node_modules/@radix-ui/react-tabs/dist/index.mjs","../../src/components/ui/tabs.tsx"],"sourcesContent":["import { supabase } from \"@/integrations/supabase/client\";\nimport { toast } from \"sonner\";\nimport { InventoryRecognitionResult } from \"@/types/inventory\";\n\n// OpenAI Vision API Integration\nexport const analyzeImageWithOpenAI = async (imageBase64: string, prompt: string): Promise<string> => {\n  try {    \n    const response = await supabase.functions.invoke('analyze-image', {\n      body: { \n        imageBase64, \n        prompt \n      }\n    });\n    \n    if (response.error) {\n      throw new Error('Analysis failed');\n    }\n    \n    if (!response.data || !response.data.analysis) {\n      throw new Error('Invalid response format');\n    }\n    \n    return response.data.analysis;\n  } catch (error) {\n    toast.error(\"Failed to analyze image\");\n    throw new Error(\"Analysis failed\");\n  }\n};\n\n// Helper function to debug inventory counts before saving\nexport const debugInventoryCounts = (counts: any[]) => {\n  console.log('Inventory counts to save:', JSON.stringify(counts, null, 2));\n  return counts;\n};\n\n// Process product with OpenAI Vision API\nexport const analyzeProductWithOpenAI = async (imageBase64: string): Promise<any> => {\n  try {    \n    const response = await supabase.functions.invoke('analyze-product', {\n      body: { \n        imageBase64\n      }\n    });\n    \n    if (response.error) {\n      throw new Error('Analysis failed');\n    }\n    \n    if (!response.data) {\n      throw new Error('Invalid response format');\n    }\n\n    if (response.data.product && typeof response.data.product.currentStock !== 'undefined') {\n      response.data.product.currentStock = 1;\n    }\n    \n    return response.data;\n  } catch (error) {\n    toast.error(\"Failed to analyze product\");\n    throw new Error(\"Analysis failed\");\n  }\n};\n\n// New utility to export inventory data to CSV format\nexport const exportInventoryToCSV = (items: InventoryRecognitionResult[]): string => {\n  const headers = [\"Product Name\", \"Size\", \"Count\", \"Confidence\"];\n  const csvContent = [\n    headers.join(\",\"),\n    ...items.map(item => [\n      `\"${item.name}\"`, \n      `\"${item.size || 'N/A'}\"`,\n      item.count,\n      `${Math.round(item.confidence * 100)}%`\n    ].join(\",\"))\n  ].join(\"\\n\");\n  \n  return csvContent;\n};\n\n// New utility to generate print-friendly HTML\nexport const generatePrintableHTML = (items: InventoryRecognitionResult[]): string => {\n  const tableRows = items.map(item => `\n    <tr>\n      <td>${item.name}</td>\n      <td>${item.size || 'N/A'}</td>\n      <td>${item.count}</td>\n      <td>${Math.round(item.confidence * 100)}%</td>\n    </tr>\n  `).join('');\n  \n  return `\n    <html>\n      <head>\n        <title>Inventory Report</title>\n        <style>\n          body { font-family: Arial, sans-serif; margin: 20px; }\n          h1 { color: #333; }\n          table { width: 100%; border-collapse: collapse; margin: 20px 0; }\n          th, td { padding: 8px; border-bottom: 1px solid #ddd; text-align: left; }\n          th { background-color: #f2f2f2; }\n        </style>\n      </head>\n      <body>\n        <h1>Inventory Scan Report - ${new Date().toLocaleDateString()}</h1>\n        <table>\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>Size/Volume</th>\n              <th>Count</th>\n              <th>Confidence</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${tableRows}\n          </tbody>\n        </table>\n        <p>Generated on: ${new Date().toLocaleString()}</p>\n      </body>\n    </html>\n  `;\n};\n","\"use client\";\n\n// packages/react/tabs/src/tabs.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TABS_NAME = \"Tabs\";\nvar [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);\nvar Tabs = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = \"horizontal\",\n      dir,\n      activationMode = \"automatic\",\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue\n    });\n    return /* @__PURE__ */ jsx(\n      TabsProvider,\n      {\n        scope: __scopeTabs,\n        baseId: useId(),\n        value,\n        onValueChange: setValue,\n        orientation,\n        dir: direction,\n        activationMode,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            \"data-orientation\": orientation,\n            ...tabsProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabs.displayName = TABS_NAME;\nvar TAB_LIST_NAME = \"TabsList\";\nvar TabsList = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Root,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        orientation: context.orientation,\n        dir: context.dir,\n        loop,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            role: \"tablist\",\n            \"aria-orientation\": context.orientation,\n            ...listProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabsList.displayName = TAB_LIST_NAME;\nvar TRIGGER_NAME = \"TabsTrigger\";\nvar TabsTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !disabled,\n        active: isSelected,\n        children: /* @__PURE__ */ jsx(\n          Primitive.button,\n          {\n            type: \"button\",\n            role: \"tab\",\n            \"aria-selected\": isSelected,\n            \"aria-controls\": contentId,\n            \"data-state\": isSelected ? \"active\" : \"inactive\",\n            \"data-disabled\": disabled ? \"\" : void 0,\n            disabled,\n            id: triggerId,\n            ...triggerProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!disabled && event.button === 0 && event.ctrlKey === false) {\n                context.onValueChange(value);\n              } else {\n                event.preventDefault();\n              }\n            }),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if ([\" \", \"Enter\"].includes(event.key)) context.onValueChange(value);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => {\n              const isAutomaticActivation = context.activationMode !== \"manual\";\n              if (!isSelected && !disabled && isAutomaticActivation) {\n                context.onValueChange(value);\n              }\n            })\n          }\n        )\n      }\n    );\n  }\n);\nTabsTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"TabsContent\";\nvar TabsContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isSelected, children: ({ present }) => /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": isSelected ? \"active\" : \"inactive\",\n        \"data-orientation\": context.orientation,\n        role: \"tabpanel\",\n        \"aria-labelledby\": triggerId,\n        hidden: !present,\n        id: contentId,\n        tabIndex: 0,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          ...props.style,\n          animationDuration: isMountAnimationPreventedRef.current ? \"0s\" : void 0\n        },\n        children: present && children\n      }\n    ) });\n  }\n);\nTabsContent.displayName = CONTENT_NAME;\nfunction makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\nfunction makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\nvar Root2 = Tabs;\nvar List = TabsList;\nvar Trigger = TabsTrigger;\nvar Content = TabsContent;\nexport {\n  Content,\n  List,\n  Root2 as Root,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  Trigger,\n  createTabsScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":["analyzeImageWithOpenAI","imageBase64","prompt","response","supabase","toast","analyzeProductWithOpenAI","TABS_NAME","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React.forwardRef","props","forwardedRef","__scopeTabs","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","direction","useDirection","value","setValue","useControllableState","jsx","useId","Primitive","TAB_LIST_NAME","TabsList","loop","listProps","context","rovingFocusGroupScope","RovingFocusGroup.Root","TRIGGER_NAME","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","RovingFocusGroup.Item","composeEventHandlers","event","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","children","contentProps","isMountAnimationPreventedRef","React.useRef","React.useEffect","rAF","Presence","present","baseId","Root2","List","Trigger","Content","TabsPrimitive.Root","className","ref","TabsPrimitive.List","cn","TabsPrimitive.Trigger","TabsPrimitive.Content"],"mappings":"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","x_google_ignoreList":[1]}