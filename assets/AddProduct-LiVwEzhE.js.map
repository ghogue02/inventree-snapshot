{"version":3,"file":"AddProduct-LiVwEzhE.js","sources":["../../src/components/ProductForm.tsx","../../src/pages/AddProduct.tsx"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Product } from '@/types/inventory';\nimport { addProduct } from '@/services/apiService';\nimport { toast } from 'sonner';\nimport { useNavigate } from \"react-router-dom\";\n\ninterface ProductFormProps {\n  initialValues?: Partial<Product>;\n  rawAnalysis?: string;\n}\n\nconst PRODUCT_CATEGORIES = [\n  'Grains', 'Dairy', 'Vegetables', 'Fruits', 'Meat', 'Seafood', \n  'Spices', 'Beverages', 'Snacks', 'Baked Goods', 'Canned Goods', 'Other'\n];\n\nconst PRODUCT_UNITS = [\n  'oz', 'lb', 'g', 'kg', 'ml', 'l', 'each', 'box', 'bag', 'bottle', 'can', 'jar', 'package'\n];\n\nconst ProductForm = ({ initialValues, rawAnalysis }: ProductFormProps) => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [product, setProduct] = useState<Partial<Product>>({\n    name: '',\n    category: 'Other',\n    unit: 'each',\n    cost: 0,\n    currentStock: 1,\n    reorderPoint: 5,\n    size: '',\n    ...initialValues\n  });\n\n  const handleChange = (field: keyof Product, value: any) => {\n    setProduct(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      if (!product.name || !product.category || !product.unit) {\n        toast.error(\"Please fill in all required fields\");\n        return;\n      }\n\n      const newProduct = await addProduct({\n        name: product.name,\n        category: product.category,\n        unit: product.unit,\n        cost: typeof product.cost === 'number' ? product.cost : 0,\n        currentStock: typeof product.currentStock === 'number' ? product.currentStock : 0,\n        reorderPoint: typeof product.reorderPoint === 'number' ? product.reorderPoint : 5,\n        size: product.size,\n        image: product.image\n      });\n\n      toast.success(\"Product added successfully!\");\n      navigate(\"/inventory\");\n    } catch (error) {\n      console.error(\"Error adding product:\", error);\n      toast.error(\"Failed to add product\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"name\">Product Name *</Label>\n            <Input\n              id=\"name\"\n              value={product.name}\n              onChange={(e) => handleChange('name', e.target.value)}\n              placeholder=\"Product name\"\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"category\">Category *</Label>\n            <Select \n              value={product.category} \n              onValueChange={(val) => handleChange('category', val)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select category\" />\n              </SelectTrigger>\n              <SelectContent>\n                {PRODUCT_CATEGORIES.map(category => (\n                  <SelectItem key={category} value={category}>{category}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"size\">Size/Volume</Label>\n            <Input\n              id=\"size\"\n              value={product.size}\n              onChange={(e) => handleChange('size', e.target.value)}\n              placeholder=\"e.g., 16 oz, 1 liter, 2 lb\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"unit\">Unit *</Label>\n            <Select \n              value={product.unit} \n              onValueChange={(val) => handleChange('unit', val)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select unit\" />\n              </SelectTrigger>\n              <SelectContent>\n                {PRODUCT_UNITS.map(unit => (\n                  <SelectItem key={unit} value={unit}>{unit}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"cost\">Cost ($)</Label>\n            <Input\n              id=\"cost\"\n              type=\"number\"\n              step=\"0.01\"\n              value={product.cost}\n              onChange={(e) => handleChange('cost', parseFloat(e.target.value) || 0)}\n              placeholder=\"0.00\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"currentStock\">Current Stock</Label>\n            <Input\n              id=\"currentStock\"\n              type=\"number\"\n              step=\"1\"\n              value={product.currentStock}\n              onChange={(e) => handleChange('currentStock', parseInt(e.target.value) || 0)}\n              placeholder=\"0\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"reorderPoint\">Reorder Point</Label>\n            <Input\n              id=\"reorderPoint\"\n              type=\"number\"\n              step=\"1\"\n              value={product.reorderPoint}\n              onChange={(e) => handleChange('reorderPoint', parseInt(e.target.value) || 0)}\n              placeholder=\"0\"\n            />\n          </div>\n        </div>\n\n        {rawAnalysis && (\n          <Card className=\"mt-4\">\n            <CardContent className=\"p-4\">\n              <Label className=\"block mb-2 font-medium\">AI Analysis</Label>\n              <div className=\"text-sm text-muted-foreground whitespace-pre-wrap bg-gray-50 p-3 rounded-md border\">\n                {rawAnalysis}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n        \n        <div className=\"flex justify-end space-x-2\">\n          <Button \n            type=\"button\" \n            variant=\"outline\"\n            onClick={() => navigate(\"/inventory\")}\n          >\n            Cancel\n          </Button>\n          <Button type=\"submit\" disabled={isLoading}>\n            {isLoading ? \"Saving...\" : \"Add Product\"}\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ProductForm;\n","\nimport { useState } from \"react\";\nimport Layout from \"@/components/layout/Layout\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Camera, Upload, Loader2 } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport ProductForm from \"@/components/ProductForm\";\nimport { analyzeProductWithOpenAI } from \"@/services/api/visionService\"; \n\nconst AddProduct = () => {\n  const [tab, setTab] = useState(\"form\");\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [mediaStreamRef, setMediaStreamRef] = useState<MediaStream | null>(null);\n  const [analysisResult, setAnalysisResult] = useState<any>(null);\n  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>(null);\n  const [canvasRef, setCanvasRef] = useState<HTMLCanvasElement | null>(null);\n\n  const startCamera = async () => {\n    try {\n      const constraints = {\n        video: {\n          facingMode: \"environment\",\n        },\n        audio: false\n      };\n      \n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (videoRef) {\n        videoRef.srcObject = stream;\n        setMediaStreamRef(stream);\n        setIsCapturing(true);\n      }\n    } catch (error) {\n      console.error(\"Error starting camera:\", error);\n      toast.error(\"Failed to access camera\");\n    }\n  };\n\n  const stopCamera = () => {\n    if (mediaStreamRef) {\n      mediaStreamRef.getTracks().forEach(track => track.stop());\n      setMediaStreamRef(null);\n      setIsCapturing(false);\n    }\n  };\n\n  const captureImage = () => {\n    if (!videoRef || !canvasRef) return;\n    \n    const video = videoRef;\n    const canvas = canvasRef;\n    const context = canvas.getContext(\"2d\");\n    \n    if (!context) return;\n    \n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    \n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    \n    const imageDataUrl = canvas.toDataURL(\"image/jpeg\");\n    setCapturedImage(imageDataUrl);\n    \n    stopCamera();\n  };\n\n  const resetCapture = () => {\n    setCapturedImage(null);\n    setAnalysisResult(null);\n    startCamera();\n  };\n\n  const analyzeImage = async () => {\n    if (!capturedImage) return;\n    \n    setIsAnalyzing(true);\n    \n    try {\n      toast.loading(\"Analyzing product...\");\n      \n      const result = await analyzeProductWithOpenAI(capturedImage);\n      \n      setAnalysisResult(result);\n      toast.dismiss();\n      toast.success(\"Analysis complete\");\n      \n    } catch (error) {\n      console.error(\"Error analyzing image:\", error);\n      toast.dismiss();\n      toast.error(\"Failed to analyze product. Please try again.\");\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const imageDataUrl = e.target?.result as string;\n      setCapturedImage(imageDataUrl);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <Layout \n      title=\"Add Product\" \n      description=\"Add a new product to your inventory\"\n    >\n      <div className=\"p-6\">\n        <Tabs defaultValue=\"form\" value={tab} onValueChange={setTab}>\n          <TabsList className=\"grid w-full grid-cols-3 mb-4\">\n            <TabsTrigger value=\"form\">Manual Entry</TabsTrigger>\n            <TabsTrigger value=\"camera\">Camera Scan</TabsTrigger>\n            <TabsTrigger value=\"upload\">Upload Image</TabsTrigger>\n          </TabsList>\n          \n          <TabsContent value=\"form\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <ProductForm />\n              </CardContent>\n            </Card>\n          </TabsContent>\n          \n          <TabsContent value=\"camera\">\n            <Card>\n              <CardContent className=\"p-6 space-y-4\">\n                <div className=\"video-container bg-gray-100 rounded-md aspect-video relative\">\n                  {!capturedImage ? (\n                    <video \n                      ref={node => setVideoRef(node)}\n                      autoPlay \n                      playsInline\n                      className={`w-full h-full object-cover ${isCapturing ? \"opacity-100\" : \"opacity-0\"}`}\n                      onLoadedMetadata={() => {\n                        if (videoRef) {\n                          videoRef.classList.remove(\"opacity-0\");\n                          videoRef.classList.add(\"opacity-100\");\n                        }\n                      }}\n                    />\n                  ) : (\n                    <img \n                      src={capturedImage} \n                      alt=\"Captured product\" \n                      className=\"w-full h-full object-contain\"\n                    />\n                  )}\n                  <canvas ref={node => setCanvasRef(node)} className=\"hidden\" />\n                </div>\n\n                <div className=\"flex justify-center gap-2\">\n                  {!isCapturing && !capturedImage && (\n                    <button \n                      onClick={startCamera}\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center gap-2\"\n                    >\n                      <Camera className=\"h-4 w-4\" />\n                      Start Camera\n                    </button>\n                  )}\n\n                  {isCapturing && !capturedImage && (\n                    <button \n                      onClick={captureImage}\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center gap-2\"\n                    >\n                      <Camera className=\"h-4 w-4\" />\n                      Capture Image\n                    </button>\n                  )}\n\n                  {capturedImage && !isAnalyzing && !analysisResult && (\n                    <>\n                      <button \n                        onClick={analyzeImage}\n                        className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center gap-2\"\n                      >\n                        <Loader2 className=\"h-4 w-4\" />\n                        Analyze Product\n                      </button>\n                      <button \n                        onClick={resetCapture}\n                        className=\"border border-gray-300 px-4 py-2 rounded-md flex items-center gap-2\"\n                      >\n                        <Camera className=\"h-4 w-4\" />\n                        Retake\n                      </button>\n                    </>\n                  )}\n\n                  {isAnalyzing && (\n                    <button \n                      disabled\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center gap-2 opacity-70\"\n                    >\n                      <Loader2 className=\"h-4 w-4 animate-spin\" />\n                      Analyzing...\n                    </button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n\n            {analysisResult && (\n              <Card className=\"mt-6\">\n                <CardContent className=\"p-6\">\n                  <ProductForm \n                    initialValues={analysisResult.product} \n                    rawAnalysis={analysisResult.rawAnalysis} \n                  />\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"upload\">\n            <Card>\n              <CardContent className=\"p-6 space-y-4\">\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleFileUpload}\n                    className=\"hidden\"\n                    id=\"product-upload\"\n                  />\n                  <label \n                    htmlFor=\"product-upload\"\n                    className=\"cursor-pointer flex flex-col items-center justify-center gap-2\"\n                  >\n                    <div className=\"p-4 rounded-full bg-gray-100\">\n                      <Upload className=\"h-8 w-8 text-gray-500\" />\n                    </div>\n                    <span className=\"text-sm font-medium\">Click to upload image</span>\n                    <span className=\"text-xs text-muted-foreground\">\n                      JPG, PNG or GIF up to 10MB\n                    </span>\n                  </label>\n                  \n                  {capturedImage && (\n                    <div className=\"mt-4\">\n                      <img \n                        src={capturedImage} \n                        alt=\"Uploaded product\" \n                        className=\"max-h-[200px] mx-auto object-contain\"\n                      />\n                      <div className=\"flex justify-center gap-2 mt-4\">\n                        {!analysisResult && (\n                          <>\n                            <button \n                              onClick={analyzeImage}\n                              className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center gap-2\"\n                              disabled={isAnalyzing}\n                            >\n                              {isAnalyzing ? (\n                                <>\n                                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                                  Analyzing...\n                                </>\n                              ) : (\n                                <>\n                                  <Loader2 className=\"h-4 w-4\" />\n                                  Analyze Product\n                                </>\n                              )}\n                            </button>\n                            <button \n                              onClick={() => setCapturedImage(null)}\n                              className=\"border border-gray-300 px-4 py-2 rounded-md\"\n                            >\n                              Cancel\n                            </button>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {analysisResult && (\n                  <ProductForm \n                    initialValues={analysisResult.product} \n                    rawAnalysis={analysisResult.rawAnalysis} \n                  />\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AddProduct;\n"],"names":["PRODUCT_CATEGORIES","PRODUCT_UNITS","ProductForm","initialValues","rawAnalysis","navigate","useNavigate","isLoading","setIsLoading","useState","product","setProduct","handleChange","field","value","prev","handleSubmit","e","toast","newProduct","addProduct","error","jsxs","jsx","Label","Input","Select","val","SelectTrigger","SelectValue","SelectContent","category","SelectItem","unit","Card","CardContent","Button","AddProduct","tab","setTab","capturedImage","setCapturedImage","isCapturing","setIsCapturing","isAnalyzing","setIsAnalyzing","mediaStreamRef","setMediaStreamRef","analysisResult","setAnalysisResult","videoRef","setVideoRef","canvasRef","setCanvasRef","startCamera","constraints","stream","stopCamera","track","captureImage","video","canvas","context","imageDataUrl","resetCapture","analyzeImage","result","analyzeProductWithOpenAI","handleFileUpload","event","file","reader","Layout","Tabs","TabsList","TabsTrigger","TabsContent","node","Camera","Fragment","Loader2","Upload"],"mappings":"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"}