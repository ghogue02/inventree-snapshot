import{u as t}from"./index-DKYL_AX4.js";import{s as n}from"./client-DgMJTZRL.js";const d=[{name:"McCann's Quick Cooking Irish Oatmeal",category:"Grains",unit:"box",current_stock:12,reorder_point:5,cost:4.5,image:null},{name:"Jasmine Rice",category:"Grains",unit:"lb",current_stock:50,reorder_point:25,cost:2.99,image:null},{name:"Ground Beef",category:"Meat",unit:"lb",current_stock:25,reorder_point:10,cost:5.99,image:null},{name:"Chicken Breast",category:"Meat",unit:"lb",current_stock:30,reorder_point:15,cost:4.99,image:null},{name:"Fresh Tomatoes",category:"Produce",unit:"lb",current_stock:20,reorder_point:8,cost:2.99,image:null},{name:"Fresh Herbs",category:"Produce",unit:"bunch",current_stock:15,reorder_point:5,cost:1.99,image:null},{name:"Olive Oil",category:"Pantry",unit:"bottle",current_stock:18,reorder_point:8,cost:15.99,image:null},{name:"All-Purpose Flour",category:"Pantry",unit:"lb",current_stock:40,reorder_point:20,cost:1.99,image:null},{name:"Vintage Seltzer Original",category:"Beverages",unit:"case",current_stock:15,reorder_point:6,cost:12.99,image:null},{name:"Fresh Coffee Beans",category:"Beverages",unit:"lb",current_stock:25,reorder_point:10,cost:14.99,image:null},{name:"To-Go Containers",category:"Supplies",unit:"case",current_stock:12,reorder_point:4,cost:24.99,image:null},{name:"Paper Napkins",category:"Supplies",unit:"case",current_stock:8,reorder_point:3,cost:18.99,image:null}],g=async()=>{try{const{data:e,error:r}=await n.from("products").select("*");if(r)throw console.error("Error fetching products:",r),t.error("Failed to fetch products"),r;return e.map(o=>({id:o.id,name:o.name,category:o.category,unit:o.unit,currentStock:o.current_stock,reorderPoint:o.reorder_point,cost:o.cost,image:o.image}))}catch(e){throw console.error("Error in getProducts:",e),e}},m=async e=>{try{const{data:r,error:o}=await n.from("products").insert({name:e.name,category:e.category,unit:e.unit,current_stock:e.currentStock,reorder_point:e.reorderPoint,cost:e.cost,image:e.image}).select().single();if(o)throw console.error("Error adding product:",o),t.error("Failed to add product"),o;return t.success("Product added successfully"),{id:r.id,name:r.name,category:r.category,unit:r.unit,currentStock:r.current_stock,reorderPoint:r.reorder_point,cost:r.cost,image:r.image}}catch(r){throw console.error("Error in addProduct:",r),r}},y=async e=>{try{const{data:r,error:o}=await n.from("products").update({name:e.name,category:e.category,unit:e.unit,current_stock:e.currentStock,reorder_point:e.reorderPoint,cost:e.cost,image:e.image}).eq("id",e.id).select().single();if(o)throw console.error("Error updating product:",o),t.error("Failed to update product"),o;return t.success("Product updated successfully"),{id:r.id,name:r.name,category:r.category,unit:r.unit,currentStock:r.current_stock,reorderPoint:r.reorder_point,cost:r.cost,image:r.image}}catch(r){throw console.error("Error in updateProduct:",r),r}},p=async e=>{try{const{error:r}=await n.from("products").delete().eq("id",e);if(r)throw console.error("Error deleting product:",r),t.error("Failed to delete product"),r;t.success("Product deleted successfully")}catch(r){throw console.error("Error in deleteProduct:",r),r}},_=async()=>{try{t.loading("Checking inventory data...");const{data:e,error:r}=await n.from("products").select("id").limit(1);if(r)throw console.error("Error checking existing products:",r),t.error("Failed to check existing data"),r;if(e&&e.length>0){t.success("Inventory data already loaded");return}t.loading("Loading sample data...");const{error:o}=await n.from("invoice_items").delete().not("id","is",null);if(o)throw console.error("Error deleting invoice items:",o),t.error("Failed to clear existing data"),o;const{error:a}=await n.from("invoices").delete().not("id","is",null);if(a)throw console.error("Error deleting invoices:",a),t.error("Failed to clear existing data"),a;const{error:s}=await n.from("products").delete().not("id","is",null);if(s)throw console.error("Error deleting products:",s),t.error("Failed to clear existing data"),s;const{error:i}=await n.from("products").insert(d.map(c=>({name:c.name,category:c.category,unit:c.unit,current_stock:c.current_stock,reorder_point:c.reorder_point,cost:c.cost,image:null})));if(i)throw console.error("Error inserting mock products:",i),t.error("Failed to load sample data"),i;t.success("Sample data loaded successfully")}catch(e){throw console.error("Error in loadMockProducts:",e),t.error("Failed to load sample data"),e}};export{m as a,p as d,g,_ as l,y as u};
//# sourceMappingURL=productService-BkrJxGhU.js.map
