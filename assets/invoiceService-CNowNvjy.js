import{u as a,_ as f}from"./index-DKYL_AX4.js";import{s}from"./client-DgMJTZRL.js";import{m as _}from"./utils-B-GjzKLI.js";const E=async()=>{try{const{data:o,error:e}=await s.from("invoices").select("*").order("date",{ascending:!1});if(e)throw console.error("Error fetching invoices:",e),a.error("Failed to fetch invoices"),e;return await Promise.all(o.map(async r=>{const{data:t,error:i}=await s.from("invoice_items").select(`
            *,
            product:products(*)
          `).eq("invoice_id",r.id);return i?(console.error(`Error fetching items for invoice ${r.id}:`,i),{...r,items:[]}):{id:r.id,supplierName:r.supplier_name,invoiceNumber:r.invoice_number,date:new Date(r.date),total:r.total,paidStatus:r.paid_status,imageUrl:r.image_url,items:t.map(n=>({id:n.id,invoiceId:n.invoice_id,productId:n.product_id,product:n.product?_(n.product):void 0,quantity:n.quantity,unitPrice:n.unit_price,total:n.total}))}}))}catch(o){throw console.error("Error in getInvoices:",o),o}},y=async o=>{try{const{data:e,error:c}=await s.from("invoices").insert({supplier_name:o.supplierName,invoice_number:o.invoiceNumber,date:o.date.toISOString(),total:o.total,paid_status:o.paidStatus,image_url:o.imageUrl}).select().single();if(c)throw console.error("Error creating invoice:",c),a.error("Failed to create invoice"),c;const r=e.id,t=o.items.map(d=>({invoice_id:r,product_id:d.productId,quantity:d.quantity,unit_price:d.unitPrice,total:d.total})),{error:i}=await s.from("invoice_items").insert(t);if(i)throw console.error("Error adding invoice items:",i),await s.from("invoices").delete().eq("id",r),a.error("Failed to add invoice items"),i;return a.success("Invoice added successfully"),{id:r,supplierName:e.supplier_name,invoiceNumber:e.invoice_number,date:new Date(e.date),total:e.total,paidStatus:e.paid_status,imageUrl:e.image_url,items:o.items.map(d=>({...d,id:"",invoiceId:r}))}}catch(e){throw console.error("Error in addInvoice:",e),e}},h=async o=>{try{const e=new FormData;e.append("file",o);const{data:c,error:r}=await s.functions.invoke("process-invoice",{body:e});if(r)throw console.error("Error processing invoice image:",r),new Error(r.message);return{supplierName:c.supplierName,invoiceNumber:c.invoiceNumber,date:c.date,total:c.total,items:c.items.map(i=>({name:i.name,quantity:i.quantity,unitPrice:i.unitPrice,total:i.total}))}}catch(e){throw console.error("Error in processInvoiceImage:",e),e}},b=async()=>{try{const{mockInvoices:o}=await f(async()=>{const{mockInvoices:r}=await import("./mockInvoices-BxAxOfqO.js");return{mockInvoices:r}},[]),e=new Set;o.forEach(r=>{r.items.forEach(t=>{e.add(t.name)})});const c=new Map;for(const r of e)try{const{data:t,error:i}=await s.from("products").insert({name:r,category:"Other",unit:"each",current_stock:0,reorder_point:5,cost:0}).select().single();if(i){console.error("Error creating product:",i),a.error(`Failed to create product: ${r}`);continue}t&&c.set(r,t.id)}catch(t){console.error(`Error creating product ${r}:`,t),a.error(`Failed to create product: ${r}`)}for(const r of o)try{const t=r.items.filter(u=>{const l=c.get(u.name);return l||console.warn(`Skipping item ${u.name} - no product ID found`),!!l});if(t.length===0){console.error("No valid items found for invoice:",r.invoiceNumber);continue}const i=t.reduce((u,l)=>u+l.total,0),{data:n,error:d}=await s.from("invoices").insert({supplier_name:r.supplier,invoice_number:r.invoiceNumber,date:r.date,total:i,paid_status:"paid",image_url:null}).select().single();if(d){console.error("Error creating mock invoice:",d),a.error(`Failed to create invoice ${r.invoiceNumber}`);continue}const m=n.id,v=t.map(u=>({invoice_id:m,product_id:c.get(u.name),quantity:u.quantity,unit_price:u.pricePerUnit,total:u.total})),{error:p}=await s.from("invoice_items").insert(v);if(p){console.error("Error adding mock invoice items:",p),await s.from("invoices").delete().eq("id",m),a.error(`Failed to add items for invoice ${r.invoiceNumber}`);continue}a.success(`Invoice ${r.invoiceNumber} created successfully`)}catch(t){console.error(`Error processing invoice ${r.invoiceNumber}:`,t),a.error(`Failed to process invoice ${r.invoiceNumber}`)}a.success("Mock invoices loaded successfully")}catch(o){throw console.error("Error in loadMockInvoices:",o),a.error("Failed to load mock invoices"),o}};export{y as a,E as g,b as l,h as p};
//# sourceMappingURL=invoiceService-CNowNvjy.js.map
